!function(){var l="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this,n=l.itr,t=Object.create(null);"undefined"==typeof exports||exports.nodeType?l.itr=t:("undefined"!=typeof module&&!module.nodeType&&module.exports&&(exports=module.exports=t),exports.itr=t),t.noConflict=function(){return l.itr=n,this};var e=function(l,n,t){var e,r=l.length,o=new Set;for(e=0;r>e;e+=1)o.has(l[e])||(o.add(l[e]),n.call(t,l[e],e,l))},r=function(l,n,t,e){var r,o=null==l?!0:!1;if(null==e&&(e=1),o)for(r=0;;)n.call(t,r),r+=e;else for(r=0;l>r;r+=e)n.call(t,r)};t.count=function(l,n,t,e,r){var o;for(null==l&&(l=0),null==t&&(t=1),o=l;n>o;o+=t)e.call(r,o)},t.cycle=function(l,n,t,e){for(var r=l.length,o=0;n>0;)n-=1,t.call(e,l[o],o,l),o=(o+1)%r},t.distinct=function(l,n,t){return e(l,n,t)},t.cartesianProduct=function(l,n,t,e){var r,o,u=l.length,a=n.length;for(r=0;u>r;r+=1)for(o=0;a>o;o+=1)t.call(e,[l[r],n[o]],r,o,l,n)},t.groupBy=function(l,n,t){var e,r=l.length,o=[],u=null,a=new Set,f=Array.prototype.push,c=function(r,o){return a.has(o)||n.call(t,r)!==n.call(t,l[e])?!1:(a.add(o),!0)};for(e=0;r>e;e+=1)a.has(e)||(a.add(e),u=[],u.push(l[e]),f.apply(u,l.filter(c)),o.push(u),u=null);return o},t.imap=function(l,n,t){var e=Array.prototype,r=e.slice.call(arguments,2),o=[];if(0===r.length)return o;var u,a=null,f=r[0].length,c=r.length,i=function(l){var n,t=[];for(n=0;c>n;n+=1)t.push(r[n][l]);return t};for(u=0;f>u;u+=1)a=i(u),o.push(l.apply(n,a)),a=null;return o},t.iterate=function(l,n,t,e){var r,o=[];for(r=0;n>r;r+=1)o.push(l),l=t.call(e,l);return o},t.slices=function(l,n,t,e){var r,o=Math.ceil(l.length/n),u=null;for(r=0;o>r;r+=1)u=l.slice(r*n,(r+1)*n),t.call(e,u,r,l),u=null},t.subsets=function(l,n,t,r){var o=[];e(l,function(l){o.push(l)});var u,a,f,c=o.length,i=1<<c,s=null;for(u=0;i>u;u+=1){for(s=[],f=0,a=u;a>0;a>>=1)1===(1&a)&&s.push(o[f]),f+=1;(null==r||null!=r&&s.length===r)&&n.call(t,s),s=null}},t.takeNth=function(l,n,t,e){var r,o=l.length;for(r=n-1;o>r;r+=n)t.call(e,l[r],r,l)},t.takeStrict=function(l,n,t){var e=l.length;if(n>e)throw new Error("takeStrict: array does not have enough elements");return t?l.slice(e-n):l.slice(0,n)},t.times=function(l,n,t,e){r(l,n,t,e)},"function"==typeof define&&define.amd&&define("iterators.js",[],function(){return t})}();
